name: GitHub Actions Demo
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IPFS_GATEWAY_HOST: https://gateway.ipfs.io
      SIGNUP_WALLET_ENTRY_PATH: /js/signupCoreEntry.js
      SIGNUP_WALLET_IPNS: k51qzi5uqu5dgag0pfgxzsr6rpk3egk9gmmt3xn79568uipkp1d0v0wc60lgsh
    name: build project
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
        with:
          ref: "${{github.ref}}"
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          check-latest: true
      - name: Install packages
        run: yarn install
      - name: Build project
        run: npx lerna run build --scope=@signupcash/shell --scope=@signupcash/wallet
      - uses: actions/upload-artifact@v2
        with:
          name: shell-build-folder
          path: ./packages/shell/public
      - uses: actions/upload-artifact@v2
        with:
          name: wallet-build-folder
          path: ./packages/wallet/public
  ipfs:
    name: publish to ipfs
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        project:
          - name: shell
            key: SHELL_IPNS_KEY
          - name: wallet
            key: WALLET_IPNS_KEY
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: shell-build-folder
          path: ./packages/shell/public
      - uses: actions/download-artifact@v2
        with:
          name: wallet-build-folder
          path: ./packages/wallet/public
      - name: Start IPFS
        uses: ibnesayeed/setup-ipfs@master
        with:
          run_daemon: true
          ipfs_version: 0.8
      - name: Import IPNS key
        id: key
        run: |
          echo "::set-output name=${{ matrix.project.name }}-key::$(echo $(echo "${{ secrets[format('{0}', matrix.project.key)] }}") | xxd -r -p | ipfs key import publish_${{ matrix.project.name }} -)"
      - name: Upload build to IPFS
        id: ipfs
        run: |
          echo "::set-output name=${{ matrix.project.name }}-hash::$( ipfs add -rQ ./packages/${{ matrix.project.name }}/public )"
      - name: Publish packages to IPNS
        run: |
          ipfs name publish --key=publish_${{ matrix.project.name }} ${{ steps.ipfs.outputs[format('{0}-hash', matrix.project.name)] }}
      - name: Preload IPFS on Local Gateway
        run: |
          curl --write-out 'IPFS Status: %{http_code}\n' --silent --output /dev/null --fail http://localhost:8080/ipfs/${{ steps.ipfs.outputs[format('{0}-hash', matrix.project.name)] }}
      - name: Preload IPFS on Public Gateway
        run: |
          curl --write-out 'IPFS Status: %{http_code}\n' --silent --output /dev/null --fail http://ipfs.io/ipfs/${{ steps.ipfs.outputs[format('{0}-hash', matrix.project.name)] }}
      - name: Preload IPNS on Local Gateway
        run: |
          curl --write-out 'IPNS Status: %{http_code}\n' --silent --output /dev/null --fail http://localhost:8080/ipns/${{ steps.ipfs.outputs[format('{0}-key', matrix.project.name)] }}
      - name: Preload IPNS on Public Gateway
        run: |
          curl --write-out 'IPNS Status: %{http_code}\n' --silent --output /dev/null --fail  http://ipfs.io/ipns/${{ steps.ipfs.outputs[format('{0}-key', matrix.project.name)] }}
      - name: Preload IPFS on Gateways via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            curl --write-out 'IPFS Status: %{http_code}\n' --silent --output /dev/null --fail -X POST "http://127.0.0.1:5001/api/v0/get?arg=${{ steps.ipfs.outputs[format('{0}-hash', matrix.project.name)] }}"
